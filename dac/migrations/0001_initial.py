# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-03-04 15:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Beer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('tagline', models.CharField(max_length=128)),
                ('image', models.ImageField(blank=True, upload_to='beer_images')),
                ('description', models.TextField()),
                ('abv', models.FloatField()),
                ('ibu', models.IntegerField()),
                ('og', models.IntegerField()),
                ('calories', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('address', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('category', models.CharField(choices=[('BI', 'bitterness'), ('SW', 'sweetness'), ('CO', 'color'), ('AR', 'aroma'), ('TA', 'taste')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('category', models.CharField(choices=[('MA', 'malts'), ('HO', 'hops'), ('OH', 'other')], default='OH', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=1)),
                ('review', models.TextField()),
                ('beer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dac.Beer')),
                ('flavors', models.ManyToManyField(to='dac.Flavor')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('avatar', models.ImageField(blank=True, upload_to='profile_images')),
                ('is_business', models.BooleanField(default=False)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dac.Business')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='beers',
            field=models.ManyToManyField(to='dac.Beer'),
        ),
        migrations.AddField(
            model_name='beer',
            name='flavors',
            field=models.ManyToManyField(to='dac.Flavor'),
        ),
        migrations.AddField(
            model_name='beer',
            name='ingredients',
            field=models.ManyToManyField(to='dac.Ingredient'),
        ),
    ]
